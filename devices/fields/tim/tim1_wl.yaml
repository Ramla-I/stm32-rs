_include:
  - com_break.yaml
  - tim_advanced.yaml
  - tim_16bit.yaml

CR2:
  MMS2:
    Reset:
      [
        0b0000,
        "Reset - the UG bit from the TIMx_EGR register is used as trigger output (TRGO2). If the reset is generated by the trigger input (slave mode controller configured in reset mode), the signal on TRGO2 is delayed compared to the actual reset",
      ]
    Enable:
      [
        0b0001,
        "Enable - the Counter Enable signal CNT_EN is used as trigger output (TRGO2). It is useful to start several timers at the same time or to control a window in which a slave timer is enabled. The Counter Enable signal is generated by a logic AND between the CEN control bit and the trigger input when configured in Gated mode. When the Counter Enable signal is controlled by the trigger input, there is a delay on TRGO2, except if the Master/Slave mode is selected (see the MSM bit description in TIMx_SMCR register)",
      ]
    Update:
      [
        0b0010,
        "Update - the update event is selected as trigger output (TRGO2). For instance, a master timer can then be used as a prescaler for a slave timer",
      ]
    ComparePulse:
      [
        0b0011,
        "Compare pulse - the trigger output sends a positive pulse when the CC1IF flag is to be set (even if it was already high), as soon as a capture or compare match occurs (TRGO2)",
      ]
    CompareOC1: [0b0100, Compare - OC1REFC signal is used as trigger output (TRGO2)]
    CompareOC2: [0b0101, Compare - OC2REFC signal is used as trigger output (TRGO2)]
    CompareOC3: [0b0110, Compare - OC3REFC signal is used as trigger output (TRGO2)]
    CompareOC4: [0b0111, Compare - OC4REFC signal is used as trigger output (TRGO2)]
    CompareOC5: [0b1000, Compare - OC5REFC signal is used as trigger output (TRGO2)]
    CompareOC6: [0b1001, Compare - OC6REFC signal is used as trigger output (TRGO2)]
    PulseOC4: [0b1010, Compare Pulse - OC4REFC rising or falling edges generate pulses on TRGO2]
    PulseOC6: [0b1011, Compare Pulse - OC6REFC rising or falling edges generate pulses on TRGO2]
    RisingOC4_6: [0b1100, Compare Pulse - OC4REFC or OC6REFC rising edges generate pulses on TRGO2]
    RisingOC4_FallingOC6: [0b1101, Compare Pulse - OC4REFC rising or OC6REFC falling edges generate pulses on TRGO2]
    RisingOC5_6: [0b1110, Compare Pulse - OC5REFC or OC6REFC rising edges generate pulses on TRGO2]
    RisingOC5_FallingOC6: [0b1111, Compare Pulse - OC5REFC rising or OC6REFC falling edges generate pulses on TRGO2]

DIER:
  TDE:
    Disabled: [0, Trigger DMA request disabled]
    Enabled: [1, Trigger DMA request enabled]

EGR:
  _modify:
    COM:
      name: COMG

AF1:
  BKCMP2P:
    NotInverted: [0, Input polarity not inverted]
    Inverted: [1, Input polarity inverted]
  BKCMP1P:
    NotInverted: [0, Input polarity not inverted]
    Inverted: [1, Input polarity inverted]
  BKINP:
    NotInverted: [0, Input polarity not inverted]
    Inverted: [1, Input polarity inverted]
  BKCMP2E:
    Disabled: [0, COMP2 input disabled]
    Enabled: [1, COMP2 input enabled]
  BKCMP1E:
    Disabled: [0, COMP1 input disabled]
    Enabled: [1, COMP1 input enabled]
  BKINE:
    Disabled: [0, BKIN input disabled]
    Enabled: [1, BKIN input enabled]

AF2:
  BK2CMP2P:
    NotInverted: [0, Input polarity not inverted]
    Inverted: [1, Input polarity inverted]
  BK2CMP1P:
    NotInverted: [0, Input polarity not inverted]
    Inverted: [1, Input polarity inverted]
  BK2INP:
    NotInverted: [0, Input polarity not inverted]
    Inverted: [1, Input polarity inverted]
  BK2CMP2E:
    Disabled: [0, COMP2 input disabled]
    Enabled: [1, COMP2 input enabled]
  BK2CMP1E:
    Disabled: [0, COMP1 input disabled]
    Enabled: [1, COMP1 input enabled]
  BK2INE:
    Disabled: [0, BKIN input disabled]
    Enabled: [1, BKIN input enabled]

BDTR:
  _modify:
    DT:
      name: DTG
  BK2BID:
    Input: [0, Break input BRK2 in input mode]
    Bidirectional: [1, Break input BRK2 in bidirectional mode]
  BKBID:
    Input: [0, Break input BRK in input mode]
    Bidirectional: [1, Break input BRK in bidirectional mode]
  BK2DSRM:
    Armed: [0, Break input BRK2 is armed]
    Disarmed: [1, Break input BRK2 is disarmed]
  BKDSRM:
    Armed: [0, Break input BRK is armed]
    Disarmed: [1, Break input BRK is disarmed]
  "BKF,BK2F":
    NoFilter: [0, "No filter, sampling is done at fDTS"]
    FCK_INT_N2: [1, "fSAMPLING=fCK_INT, N=2"]
    FCK_INT_N4: [2, "fSAMPLING=fCK_INT, N=4"]
    FCK_INT_N8: [3, "fSAMPLING=fCK_INT, N=8"]
    FDTS_Div2_N6: [4, "fSAMPLING=fDTS/2, N=6"]
    FDTS_Div2_N8: [5, "fSAMPLING=fDTS/2, N=8"]
    FDTS_Div4_N6: [6, "fSAMPLING=fDTS/4, N=6"]
    FDTS_Div4_N8: [7, "fSAMPLING=fDTS/4, N=8"]
    FDTS_Div8_N6: [8, "fSAMPLING=fDTS/8, N=6"]
    FDTS_Div8_N8: [9, "fSAMPLING=fDTS/8, N=8"]
    FDTS_Div16_N5: [10, "fSAMPLING=fDTS/16, N=5"]
    FDTS_Div16_N6: [11, "fSAMPLING=fDTS/16, N=6"]
    FDTS_Div16_N8: [12, "fSAMPLING=fDTS/16, N=8"]
    FDTS_Div32_N5: [13, "fSAMPLING=fDTS/32, N=5"]
    FDTS_Div32_N6: [14, "fSAMPLING=fDTS/32, N=6"]
    FDTS_Div32_N8: [15, "fSAMPLING=fDTS/32, N=8"]

RCR:
  REP: [0, 0xFFFF]
CCR5:
  GC5C3:
    Disabled: [0, No effect of OC5REF on OC3REFC]
    Enabled: [1, OC3REFC is the logical AND of OC3REFC and OC5REF]
  GC5C2:
    Disabled: [0, No effect of OC5REF on OC2REFC]
    Enabled: [1, OC2REFC is the logical AND of OC2REFC and OC5REF]
  GC5C1:
    Disabled: [0, No effect of OC5REF on OC1REFC]
    Enabled: [1, OC1REFC is the logical AND of OC1REFC and OC5REF]
DMAR:
  DMAB: [0, 0xFFFFFFFF]
OR1:
  TI1_RMP:
    IO: [0, TIM1 input capture 1 is connected to I/O]
    COMP1: [1, TIM1 input capture 1 is connected to COMP1 output]
  TIM1_ETR_ADC1_RMP:
    Select: [0, TIM1_ETR is not connected to ADC AWDx (must be selected when the ETR comes from the ETR input pin)]
    ADC_AWD1: [1, TIM1_ETR is connected to ADC AWD1]
    ADC_AWD2: [2, TIM1_ETR is connected to ADC AWD2]
    ADC_AWD3: [3, TIM1_ETR is connected to ADC AWD3]
