# Common base for 16bit and 32bit TIM2 peripheral

_include:
  - ccds.yaml
  - trigger.yaml
  - external.yaml
  - ccxnp.yaml

CR1:
  UIFREMAP:
    Disabled: [0, No remapping. UIF status bit is not copied to TIMx_CNT register bit 31]
    Enabled: [1, Remapping enabled. UIF status bit is copied to TIMx_CNT register bit 31]
CR2:
  TI1S:
    Normal: [0, The TIMx_CH1 pin is connected to TI1 input]
    XOR: [1, "The TIMx_CH1, CH2, CH3 pins are connected to TI1 input"]
  MMS:
    Reset: [0, The UG bit from the TIMx_EGR register is used as trigger output]
    Enable: [1, "The counter enable signal, CNT_EN, is used as trigger output"]
    Update: [2, The update event is selected as trigger output]
    ComparePulse:
      [
        3,
        "The trigger output send a positive pulse when the CC1IF flag it to be set, as soon as a capture or a compare match occurred",
      ]
    CompareOC1: [4, OC1REF signal is used as trigger output]
    CompareOC2: [5, OC2REF signal is used as trigger output]
    CompareOC3: [6, OC3REF signal is used as trigger output]
    CompareOC4: [7, OC4REF signal is used as trigger output]
SMCR:
  MSM:
    NoSync: [0, No action]
    Sync:
      [
        1,
        The effect of an event on the trigger input (TRGI) is delayed to allow a perfect synchronization between the current timer and its slaves (through TRGO). It is useful if we want to synchronize several timers on a single external event,
      ]
  TS:
    ITR0: [0, Internal Trigger 0 (ITR0)]
    ITR1: [1, Internal Trigger 1 (ITR1)]
    ITR2: [2, Internal Trigger 2 (ITR2)]
    TI1F_ED: [4, TI1 Edge Detector (TI1F_ED)]
    TI1FP1: [5, Filtered Timer Input 1 (TI1FP1)]
    TI2FP2: [6, Filtered Timer Input 2 (TI2FP2)]
    ETRF: [7, External Trigger input (ETRF)]
  SMS_3:
    Disabled: [0, "Slave mode disabled (see SMS[0:2])"]
    CombinedResetTrigger:
      [
        1,
        "SMS[0:2] must be 0b000 (DisabledOrCombined). Combined reset + trigger mode - Rising edge of the selected trigger input (TRGI) reinitializes the counter, generates an update of the registers and starts the counter",
      ]
  SMS:
    DisabledOrCombined:
      [
        0,
        "Slave mode disabled - if CEN = â€˜1 then the prescaler is clocked directly by the internal clock. If SMS[3]=1 then Combined reset + trigger mode - Rising edge of the selected trigger input (TRGI) reinitializes the counter, generates an update of the registers and starts the counter",
      ]
    EncoderMode1: [1, Encoder mode 1 - Counter counts up/down on TI2FP1 edge depending on TI1FP2 level]
    EncoderMode2: [2, Encoder mode 2 - Counter counts up/down on TI1FP2 edge depending on TI2FP1 level]
    EncoderMode3:
      [
        3,
        Encoder mode 3 - Counter counts up/down on both TI1FP1 and TI2FP2 edges depending on the level of the other input,
      ]
    ResetMode:
      [
        4,
        Reset Mode - Rising edge of the selected trigger input (TRGI) reinitializes the counter and generates an update of the registers,
      ]
    GatedMode:
      [
        5,
        Gated Mode - The counter clock is enabled when the trigger input (TRGI) is high. The counter stops (but is not reset) as soon as the trigger becomes low. Both start and stop of the counter are controlled,
      ]
    TriggerMode:
      [
        6,
        Trigger Mode - The counter starts at a rising edge of the trigger TRGI (but it is not reset). Only the start of the counter is controlled,
      ]
    ExtClockMode: [7, External Clock Mode 1 - Rising edges of the selected trigger (TRGI) clock the counter]
DIER:
  UDE:
    Disabled: [0, Update DMA request disabled]
    Enabled: [1, Update DMA request enabled]

DCR:
  DBL: [0, 0b10001]
  DBA: [0, 31]

AF1:
  _modify:
    "ResETRSEL,ETRSEL":
      name: ETRSEL
  ETRSEL:
    Legacy: [0, ETR legacy mode]
    COMP1: [1, COMP1 output]
    COMP2: [2, COMP2 output]
TISEL:
  TI?SEL:
    Selected: [0, TIM1_CHx input selected]
